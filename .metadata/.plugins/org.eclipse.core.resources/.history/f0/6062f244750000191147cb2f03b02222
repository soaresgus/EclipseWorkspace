package me.ninjay.oneperfil.ranks;

import org.bukkit.Material;
import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.inventory.Inventory;
import org.bukkit.inventory.ItemStack;

import net.eduard.api.lib.Mine;

public class ComandoRankUp implements CommandExecutor {

	@Override
	public boolean onCommand(CommandSender sender, Command cmd, String lb, String[] args) {
		if (sender instanceof Player) {
			Player p = (Player) sender;
			Inventory rank1i = Mine.newInventory("Rank [1]", 9 * 3);
			Inventory rank2i = Mine.newInventory("Rank [2]", 9 * 3);
			Inventory rank3i = Mine.newInventory("Rank [3]", 9 * 3);
			Inventory rank4i = Mine.newInventory("Rank [4]", 9 * 3);
			Inventory rank5i = Mine.newInventory("Rank [5]", 9 * 3);
			Inventory rank6i = Mine.newInventory("Rank [6]", 9 * 3);
			Inventory rank7i = Mine.newInventory("Rank [7]", 9 * 3);
			Inventory rank8i = Mine.newInventory("Rank [8]", 9 * 3);
			Inventory rank9i = Mine.newInventory("Rank [9]", 9 * 3);
			Inventory rank10i = Mine.newInventory("Rank [10]", 9 * 3);
			
			ItemStack um = Mine.newItem("§6Rank [1]", Material.COAL, 1, 0, "§6Requisitos: §e[10.000 Blocos]");
			ItemStack dois = Mine.newItem("§6Rank [2]", Material.COAL_ORE, 1, 0, "§6Requisitos: §e[300.000 Coins]");
			ItemStack tres = Mine.newItem("§6Rank [3]", Material.COAL_BLOCK, 1, 0, "§6Requisitos: §e[12 Horas online]");
			ItemStack quatro = Mine.newItem("§6Rank [4]", Material.IRON_INGOT, 1, 0, "§6Requisitos: §e[150 Almas]");
			ItemStack cinco = Mine.newItem("§6Rank [5]", Material.IRON_ORE, 1, 0, "§6Requisitos: §e[20 Horas online]");
			ItemStack seis = Mine.newItem("§6Rank [6]", Material.IRON_BLOCK, 1, 0, "§6Requisitos: §e[250 Almas]");
			ItemStack sete = Mine.newItem("§6Rank [7]", Material.GOLD_INGOT, 1, 0, "§6Requisitos: §e[1.000.000 Coins]");
			ItemStack oito = Mine.newItem("§6Rank [8]", Material.GOLD_ORE, 1, 0, "§6Requisitos: §e[50 Horas online]");
			ItemStack nove = Mine.newItem("§6Rank [9]", Material.GOLD_BLOCK, 1, 0, "§6Requisitos: §e[500 Almas]");
			ItemStack dez = Mine.newItem("§6Rank [10]", Material.DIAMOND, 1, 0,
					"§6Requisitos: §e[Ter 5 vitórias totais em eventos]");
			
			ItemStack confirmar = Mine.newItem(Material.STAINED_CLAY, "§aConfirmar", 1, 5);
			ItemStack negar = Mine.newItem(Material.STAINED_CLAY, "§cCancelar", 1, 14);
			
			rank1i.setItem(Mine.getPosition(2, 3), confirmar);
			rank1i.setItem(Mine.getPosition(2, 5), um);
			rank1i.setItem(Mine.getPosition(2, 7), negar);
			
 			rank2i.setItem(Mine.getPosition(2, 3), confirmar);
			rank2i.setItem(Mine.getPosition(2, 5), dois);
			rank2i.setItem(Mine.getPosition(2, 7), negar);
			
			rank3i.setItem(Mine.getPosition(2, 3), confirmar);
			rank3i.setItem(Mine.getPosition(2, 5), tres);
		    rank3i.setItem(Mine.getPosition(2, 7), negar);
			
			rank4i.setItem(Mine.getPosition(2, 3), confirmar);
			rank4i.setItem(Mine.getPosition(2, 5), quatro);
			rank4i.setItem(Mine.getPosition(2, 7), negar);
			
			rank5i.setItem(Mine.getPosition(2, 3), confirmar);
			rank5i.setItem(Mine.getPosition(2, 5), cinco);
			rank5i.setItem(Mine.getPosition(2, 7), negar);
			
			rank6i.setItem(Mine.getPosition(2, 3), confirmar);
			rank6i.setItem(Mine.getPosition(2, 5), seis);
			rank6i.setItem(Mine.getPosition(2, 7), negar);
			
			rank7i.setItem(Mine.getPosition(2, 3), confirmar);
			rank7i.setItem(Mine.getPosition(2, 5), sete);
			rank7i.setItem(Mine.getPosition(2, 7), negar);
			
			rank8i.setItem(Mine.getPosition(2, 3), confirmar);
			rank8i.setItem(Mine.getPosition(2, 5), oito);
			rank8i.setItem(Mine.getPosition(2, 7), negar);
			
			rank9i.setItem(Mine.getPosition(2, 3), confirmar);
			rank9i.setItem(Mine.getPosition(2, 5), nove);
			rank9i.setItem(Mine.getPosition(2, 7), negar);
			
			rank10i.setItem(Mine.getPosition(2, 3), confirmar);
			rank10i.setItem(Mine.getPosition(2, 5), dez);
			rank10i.setItem(Mine.getPosition(2, 7), negar);
			
			if(!p.hasPermission("rank1.rank")) {
				p.openInventory(rank1i);
				return true;
			}
			if(p.hasPermission("rank2.rank")) {
				p.openInventory(rank2i);
				return true;
			}
			if(p.hasPermission("rank3.rank")) {
				p.openInventory(rank3i);
				return true;
			}
			if(p.hasPermission("rank4.rank")) {
				p.openInventory(rank4i);
				return true;
			}
			if(p.hasPermission("rank5.rank")) {
				p.openInventory(rank5i);
				return true;
			}
			if(p.hasPermission("rank6.rank")) {
				p.openInventory(rank6i);
				return true;
			}
			if(p.hasPermission("rank7.rank")) {
				p.openInventory(rank7i);
				return true;
			}
			if(p.hasPermission("rank8.rank")) {
				p.openInventory(rank8i);
				return true;
			}
			if(p.hasPermission("rank9.rank")) {
				p.openInventory(rank9i);
				return true;
			}
			if(p.hasPermission("rank10.rank")) {
				p.openInventory(rank10i);
				return true;
			}
		}
		return false;
	}

}
